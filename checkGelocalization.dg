/* Function that checks if the geolocation
of visits to Zoho CRM Accounts is correct
within some distance parameters
By default, Google Maps calculates driving distances
Documentation Distance Matrix Module: https://developers.google.com/maps/documentation/distance-matrix/distance-matrix

(c) Manu Quiroga
Last Update: 25/10/23
*/

apikey_google = "xxxx";
//Distance Limit in meters
limitDistance = 2000;
//idMeeting is an argument in the workflow function
getMeeting = zoho.crm.getRecordById("Events",idMeeting);
mensajeemail = "";
//Checking if is visited
if(getMeeting.getJSON("Check_In_Status") == "VISITED")
{
	ownerMeeting = getMeeting.getJSON("Created_By").getJSON("name");
	ownerEmail = getMeeting.getJSON("Created_By").getJSON("email");
	urlMeeting = "https://crm.zoho.eu/crm/lendapetfood/tab/Events/" + idMeeting;
	checkinAddr = getMeeting.getJSON("Check_In_Address");
	relAcc = getMeeting.getJSON("What_Id").getJSON("id");
	nameAcc = getMeeting.getJSON("What_Id").getJSON("name");
	if(getMeeting.getJSON("$se_module") == "Accounts")
	{
		getAcc = zoho.crm.getRecordById("Accounts",relAcc);
		street = getAcc.get("Shipping_Street");
		city = getAcc.get("Shipping_City");
		state = getAcc.get("Shipping_State");
		code = getAcc.get("Shipping_Code");
		country = getAcc.get("Shipping_Country");
	}
	if(getMeeting.getJSON("$se_module") == "Leads")
	{
   	 //Custom inputs in Leads
		getAcc = zoho.crm.getRecordById("Leads",relAcc);
		street = getAcc.get("Calle_Facturacion");
		city = getAcc.get("Ciudad_Facturacion");
		state = getAcc.get("Provincia_Facturacion");
		code = getAcc.get("Codigo_Postal_Facturacion");
		country = getAcc.get("Pa_s_Facturacion");
	}
	if(street.isNull() = true || city.isNull() = true || state.isNull() = true || code.isNull() = true || country.isNull() = true)
	{
		info "All good"; 
	}
	else
	{
		/* Data Normalization to easy things with Google */
		street_t = street.replaceAll(" ","%20");
		address = street_t.concat("+").concat(code).concat("+").concat(city).concat("+").concat(state).concat("+").concat(country);
		address = address.replaceAll(" ","%20");
		address = address.replaceAll("ñ","n");
		address = address.replaceAll("á","a");
		address = address.replaceAll("à","a");
		address = address.replaceAll("é","e");
		address = address.replaceAll("è","e");
		address = address.replaceAll("í","i");
		address = address.replaceAll("ì","i");
		address = address.replaceAll("ó","o");
		address = address.replaceAll("ò","o");
		address = address.replaceAll("ú","u");
		address = address.replaceAll("ù","u");
		address = address.remove("'");
		address = address.remove("`");
		address = address.remove("´");
		address = address.remove("\"");
		destAddr = address;
		/* End Normalization */
   		 // URL Google Maps Distance Matrix
		//By default is driving distance
		urlG = "https://maps.googleapis.com/maps/api/distancematrix/json?units=metric&origins=" + checkinAddr + "&destinations=" + destAddr + "&mode=driving&key=" + apikey_google;
		DistanceResult = invokeurl
		[
			url :urlG
			type :POST
		];
		if(DistanceResult.contains("distance"))
		{
			rows = DistanceResult.getjson("rows");
			elementsList = rows.toJSONList();
			elements = elementsList.getJSON("elements");
			distanceList = elements.toJSONList();
			distance = distanceList.getjson("distance");
			valueList = distance.toJSONList();
			if(valueList.getJSON("value") > limitDistance)
			{

			mensajeemail = "Email message";
				sendmail
				[
					from :zoho.adminuserid
					to : ""
					subject :"❌📍 Bad Geolocation - " + nameAcc
					message :mensajeemail
				]
				//We can update Event with custom data or even push it to a Zoho Analytics report
				
			}
			else
			{
				info "Correct Gelocalization";
			}
		}
	}
}
